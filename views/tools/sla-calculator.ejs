<%- include('../partials/header', { title: 'SLA Calculator' }) %>
<%- include('../partials/navbar') %>

<div class="wrapper d-flex flex-column min-vh-100">
  <%- include('../partials/adsbar') %>

  <div class="layout-content d-flex flex-grow-1">
    <%- include('../partials/sidebar') %>

    <main class="main-content p-4">
      <%- include('../partials/searchbar') %>
      <%- include('../partials/cookiebar') %>

      <div class="container-fluid">
        <h1 class="h3 mb-4">Calculate Allowed Downtime</h1>

        <div class="card">
          <div class="card-body">
            <form id="slaForm" class="d-flex justify-content-center">
              <div style="min-width: 360px; max-width: 600px; width: 100%;">
                <div class="mb-3">
                  <label for="uptime" class="form-label">
                    Uptime target (%) <span class="ms-1" title="Typical values: 99.9, 99.99, 99.999">ðŸ“Œ</span>
                  </label>
                  <input
                    type="text"
                    class="form-control"
                    id="uptime"
                    value="99.9"
                    placeholder="Enter uptime target (e.g. 99.999)"
                    inputmode="decimal"
                    pattern="^9[0-9](\.\d{1,6})?$"
                  />
                  <div class="invalid-feedback">Uptime must begin with 9 and be between 90.001 and 99.999</div>
                  <small class="form-text text-muted">Must be between 90.001 and less than 99.999</small>
                </div>
              </div>
            </form>

            <div id="results" class="d-flex justify-content-center mt-4" style="display: none;">
              <div style="min-width: 360px; max-width: 600px; width: 100%;">
                <h2 class="h5">Allowed Downtime</h2>
                <table class="table table-bordered text-center mt-3">
                  <thead class="table-light">
                    <tr>
                      <th>Period</th>
                      <th>Total Downtime</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr><td>Per Day</td><td id="dayResult">â€“</td></tr>
                    <tr><td>Per Month</td><td id="monthResult">â€“</td></tr>
                    <tr><td>Per Quarter</td><td id="quarterResult">â€“</td></tr>
                    <tr><td>Per Year</td><td id="yearResult">â€“</td></tr>
                  </tbody>

                </table>
                <button id="copyResults" class="btn btn-sm mt-2 btn-outline-theme">ðŸ“‹ Copy Results</button>
              </div>
            </div>

          </div>
        </div>
      </div>
    </main>
  </div>

  <%- include('../partials/footer') %>

  
</div>

<script>
  const form = document.getElementById('slaForm');
  const resultsSection = document.getElementById('results');
  const copyButton = document.getElementById('copyResults');
  const inputs = {
    day: document.getElementById('dayResult'),
    month: document.getElementById('monthResult'),
    quarter: document.getElementById('quarterResult'),
    year: document.getElementById('yearResult'),
  };

  form.addEventListener('submit', async function (e) {
    e.preventDefault();

    const uptimeField = document.getElementById('uptime');
    const uptime = uptimeField.value.trim();

    const parsed = parseFloat(uptime);
    if (isNaN(parsed) || parsed < 90.001 || parsed >= 100) {
      uptimeField.classList.add('is-invalid');
      resultsSection.style.display = 'none';
      return;
    }

    uptimeField.classList.remove('is-invalid');

    const response = await fetch('/tools/sla-calculate', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ uptime: parsed }),
    });

    if (!response.ok) {
      resultsSection.style.display = 'none';
      return;
    }

    const data = await response.json();
    inputs.day.textContent = `${data.day} seconds`;
    inputs.month.textContent = `${data.month} seconds`;
    inputs.quarter.textContent = `${data.quarter} seconds`;
    inputs.year.textContent = `${data.year} seconds`;
    resultsSection.style.display = 'block';
  });

  copyButton.addEventListener('click', () => {
    const text = [
      `Per Day: ${inputs.day.textContent}`,
      `Per Month: ${inputs.month.textContent}`,
      `Per Quarter: ${inputs.quarter.textContent}`,
      `Per Year: ${inputs.year.textContent}`,
    ].join('\n');

    navigator.clipboard.writeText(text).then(() => {
      copyButton.textContent = 'âœ… Copied!';
      setTimeout(() => copyButton.textContent = 'ðŸ“‹ Copy Results', 1500);
    });
  });
</script>
